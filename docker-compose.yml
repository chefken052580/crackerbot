version: '3.8'
services:
  bot_frontend:
    build:
      context: ./bot_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
      - "8080:8080"
    networks:
      - bot_network
    depends_on:
      - websocket_server
      - bot_lead
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bot_backend:
    build:
      context: ./bot_backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - bot_network
    depends_on:
      - websocket_server
      - redis
    command: node src/server.js
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bot_lead:
    build:
      context: ./bot_lead
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    networks:
      - bot_network
    depends_on:
      - websocket_server
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    command: pm2-runtime start src/ecosystem.config.cjs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  websocket_server:
    build:
      context: ./websocket_server
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5002"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    environment: {}

  ngrok:
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=2pg1fl3g1wDInoW9OJkujqyv0Ro_4NBkBhsL3NSVbK249kRL7
    command: ["start", "--all", "--config", "/etc/ngrok.yml", "--log=stdout"]
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml:ro
    ports:
      - "4040:4040"
    networks:
      - bot_network
    depends_on:
      - bot_frontend
      - bot_backend
      - websocket_server
      - bot_lead
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  bot_network:
    driver: bridge